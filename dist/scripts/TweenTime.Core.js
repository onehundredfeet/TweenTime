(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("signals"), require("gsap")["TweenMax"], require("gsap")["TimelineMax"], require("gsap")["Quad"], require("lodash"));
	else if(typeof define === 'function' && define.amd)
		define(["signals", "TweenMax", "TimelineMax", "Quad", "lodash"], factory);
	else if(typeof exports === 'object')
		exports["Core"] = factory(require("signals"), require("gsap")["TweenMax"], require("gsap")["TimelineMax"], require("gsap")["Quad"], require("lodash"));
	else
		root["TweenTime"] = root["TweenTime"] || {}, root["TweenTime"]["Core"] = factory(root["signals"], root["TweenMax"], root["TimelineMax"], root["Quad"], root["_"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(1);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _Timer = __webpack_require__(2);\n\nvar _Timer2 = _interopRequireDefault(_Timer);\n\nvar _Orchestrator = __webpack_require__(4);\n\nvar _Orchestrator2 = _interopRequireDefault(_Orchestrator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _ = __webpack_require__(9);\n\nvar Core = function () {\n  function Core(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Core);\n\n    this.data = data;\n    this.options = options;\n    this.timer = new _Timer2.default(options);\n    this.orchestrator = new _Orchestrator2.default(this.timer, this.data);\n  }\n\n  _createClass(Core, [{\n    key: 'addUpdateListener',\n    value: function addUpdateListener(listener) {\n      this.orchestrator.addUpdateListener(listener);\n    }\n  }, {\n    key: 'removeUpdateListener',\n    value: function removeUpdateListener(listener) {\n      this.orchestrator.removeUpdateListener(listener);\n    }\n  }, {\n    key: 'setData',\n    value: function setData(data) {\n      this.data = data;\n      this.orchestrator.setData(data);\n    }\n  }, {\n    key: 'getData',\n    value: function getData() {\n      return this.data;\n    }\n  }, {\n    key: 'getItem',\n    value: function getItem(item_id) {\n      // In case we passed the item object directly return it.\n      if (item_id && (typeof item_id === 'undefined' ? 'undefined' : _typeof(item_id)) === 'object') {\n        return item_id;\n      }\n\n      return _.find(this.data, function (item) {\n        return item.id === item_id;\n      });\n    }\n  }, {\n    key: 'getCurrentTime',\n    value: function getCurrentTime() {\n      return this.timer.getCurrentTime();\n    }\n  }, {\n    key: 'getProperty',\n    value: function getProperty(prop_name, item_id_or_obj) {\n      // If we passed the item name get the object from it.\n      var item = this.getItem(item_id_or_obj);\n\n      // Return false if we have no item\n      if (!item) {\n        return false;\n      }\n\n      return _.find(item.properties, function (property) {\n        return property.name === prop_name;\n      });\n    }\n  }, {\n    key: 'getValues',\n    value: function getValues(item_id_or_obj) {\n      // If we passed the item name get the object from it.\n      var item = this.getItem(item_id_or_obj);\n\n      // Return false if we have no item\n      if (!item) {\n        return undefined;\n      }\n\n      return item.values;\n    }\n  }, {\n    key: 'getValue',\n    value: function getValue(prop_name, item_id_or_obj) {\n      // If we passed the item name get the object from it.\n      var values = this.getValues(item_id_or_obj);\n\n      // Return false if we have no item\n      if (!values) {\n        return undefined;\n      }\n\n      if (values[prop_name] !== undefined) {\n        return values[prop_name];\n      }\n      return undefined;\n    }\n  }, {\n    key: 'getKeyAt',\n    value: function getKeyAt(property, time_in_seconds) {\n      return _.find(property.keys, function (key) {\n        return key.time === time_in_seconds;\n      });\n    }\n  }, {\n    key: 'setValue',\n    value: function setValue(property, new_val) {\n      var time_in_seconds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var time = time_in_seconds;\n      if (time === false) {\n        time = this.timer.getCurrentTime() / 1000;\n      }\n      var key = this.getKeyAt(property, time);\n\n      if (key) {\n        // If we found a key, simply update the value.\n        key.val = new_val;\n      } else {\n        // If we are not on a key but the property has other keys,\n        // create it and add it to the keys array.\n        key = { val: new_val, time: time, _property: property };\n        if (this.options.defaultEase) {\n          key.ease = this.options.defaultEase;\n        }\n        property.keys.push(key);\n        // Also sort the keys.\n        property.keys = _Utils2.default.sortKeys(property.keys);\n      }\n    }\n  }, {\n    key: 'getTotalDuration',\n    value: function getTotalDuration() {\n      return this.orchestrator.getTotalDuration();\n    }\n  }, {\n    key: 'addOnEventListener',\n    value: function addOnEventListener(callback) {\n      this.orchestrator.onEvent.add(callback);\n    }\n  }, {\n    key: 'removeOnEventListener',\n    value: function removeOnEventListener(callback) {\n      this.orchestrator.onEvent.remove(callback);\n    }\n  }]);\n\n  return Core;\n}();\n\nmodule.exports = Core;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 1 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EASE_POINTS = {\n  'Linear.easeNone': [0.250, 0.250, 0.750, 0.750],\n  'Quad.easeIn': [0.550, 0.085, 0.680, 0.530],\n  'Quad.easeOut': [0.250, 0.460, 0.450, 0.940],\n  'Quad.easeInOut': [0.455, 0.030, 0.515, 0.955],\n  'Cubic.easeIn': [0.550, 0.055, 0.675, 0.190],\n  'Cubic.easeOut': [0.215, 0.610, 0.355, 1.000],\n  'Cubic.easeInOut': [0.645, 0.045, 0.355, 1.000],\n  'Quart.easeIn': [0.895, 0.030, 0.685, 0.220],\n  'Quart.easeOut': [0.165, 0.840, 0.440, 1.000],\n  'Quart.easeInOut': [0.770, 0.000, 0.175, 1.000],\n  'Quint.easeIn': [0.755, 0.050, 0.855, 0.060],\n  'Quint.easeOut': [0.230, 1.000, 0.320, 1.000],\n  'Quint.easeInOut': [0.860, 0.000, 0.070, 1.000]\n};\n\nvar Utils = function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: 'formatMinutes',\n    value: function formatMinutes(d) {\n      // convert milliseconds to seconds\n      var seconds = d / 1000;\n      var hours = Math.floor(seconds / 3600);\n      var minutes = Math.floor((seconds - hours * 3600) / 60);\n      seconds = seconds - minutes * 60;\n      var output = seconds + 's';\n      if (minutes) {\n        output = minutes + 'm ' + output;\n      }\n      if (hours) {\n        output = hours + 'h ' + output;\n      }\n      return output;\n    }\n  }, {\n    key: 'getClosestTime',\n    value: function getClosestTime(data, time) {\n      var objectId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var property_name = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var timer = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var tolerance = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n\n      if (timer) {\n        var timer_time = timer.getCurrentTime() / 1000;\n        if (Math.abs(timer_time - time) <= tolerance) {\n          return timer_time;\n        }\n      }\n\n      if (objectId || property_name) {\n        for (var i = 0; i < data.length; i++) {\n          var item = data[i];\n          // Don't match item with itself, but allow property to match item start/end.\n          if (item.id !== objectId || property_name) {\n            // First check start & end.\n            if (Math.abs(item.start - time) <= tolerance) {\n              return item.start;\n            }\n\n            if (Math.abs(item.end - time) <= tolerance) {\n              return item.end;\n            }\n          }\n\n          // Test properties keys\n          for (var j = 0; j < item.properties.length; j++) {\n            var prop = item.properties[j];\n\n            // Don't match property with itself.\n            if (prop.keys && (item.id !== objectId || prop.name !== property_name)) {\n              for (var k = 0; k < prop.keys.length; k++) {\n                var key = prop.keys[k];\n                if (Math.abs(key.time - time) <= tolerance) {\n                  return key.time;\n                }\n              }\n            }\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'getPreviousKey',\n    value: function getPreviousKey(keys, time) {\n      var prevKey = false;\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (key.time < time) {\n          prevKey = key;\n        } else {\n          return prevKey;\n        }\n      }\n      return prevKey;\n    }\n  }, {\n    key: 'sortKeys',\n    value: function sortKeys(keys) {\n      var compare = function compare(a, b) {\n        if (a.time < b.time) {\n          return -1;\n        }\n        if (a.time > b.time) {\n          return 1;\n        }\n        return 0;\n      };\n      return keys.sort(compare);\n    }\n  }, {\n    key: 'guid',\n    value: function guid() {\n      var s4 = function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      };\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n  }, {\n    key: 'getEasingPoints',\n    value: function getEasingPoints(ease) {\n      // If already an array then return it directly.\n      if (Array.isArray(ease)) {\n        return ease;\n      }\n      // Return the points but clone the array first ; )\n      if (EASE_POINTS[ease]) {\n        return EASE_POINTS[ease].slice(0);\n      }\n      return EASE_POINTS['Quad.easeInOut'].slice(0);\n    }\n  }]);\n\n  return Utils;\n}();\n\nexports.default = Utils;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Signals = __webpack_require__(3);\n\nvar Timer = function () {\n  function Timer() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Timer);\n\n    // in millisecond\n    this.totalDuration = options.totalDuration || 240 * 1000;\n    // Use an array for the time for easier d3.js integration (used as data for timeseeker).\n    this.time = [0];\n    this.is_playing = false;\n    this.last_timeStamp = -1;\n    this.last_time = -1;\n    this.updated = new Signals.Signal();\n    this.preStatusChanged = new Signals.Signal();\n    this.statusChanged = new Signals.Signal();\n    this.durationChanged = new Signals.Signal();\n    this.seeked = new Signals.Signal();\n    this.update = this.update.bind(this);\n    window.requestAnimationFrame(this.update);\n  }\n\n  _createClass(Timer, [{\n    key: 'getCurrentTime',\n    value: function getCurrentTime() {\n      return this.time[0];\n    }\n  }, {\n    key: 'getDuration',\n    value: function getDuration() {\n      return this.totalDuration / 1000;\n    }\n  }, {\n    key: 'setDuration',\n    value: function setDuration(seconds) {\n      this.totalDuration = seconds * 1000;\n      this.durationChanged.dispatch(seconds);\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this = this;\n\n      this.preStatusChanged.dispatch(true);\n      setImmediate(function () {\n        _this.is_playing = true;\n        _this.statusChanged.dispatch(_this.is_playing);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this2 = this;\n\n      this.preStatusChanged.dispatch(false);\n      setImmediate(function () {\n        _this2.is_playing = false;\n        _this2.statusChanged.dispatch(_this2.is_playing);\n      });\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      var _this3 = this;\n\n      this.preStatusChanged.dispatch(!this.is_playing);\n      setImmediate(function () {\n        _this3.is_playing = !_this3.is_playing;\n        _this3.statusChanged.dispatch(_this3.is_playing);\n      });\n    }\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      this.time[0] = time[0];\n      this.seeked.dispatch(this.time[0]);\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      // Init timestamp\n\n      // the argument timestamp is too old, if we have a long time task on click on\n      // play button's click handler. so re-fetch the current timestamp here again.\n      var timestamp = performance.now();\n      if (this.last_timeStamp === -1) {\n        this.last_timeStamp = timestamp;\n      }\n      var elapsed = timestamp - this.last_timeStamp;\n\n      if (this.is_playing) {\n        this.time[0] += elapsed;\n      }\n\n      if (this.time[0] >= this.totalDuration) {\n        // Stop timer when reaching the end.\n        this.time[0] = this.totalDuration;\n        this.stop();\n      }\n\n      this.updated.dispatch(this.time[0], this.is_playing ? elapsed : 0);\n\n      this.last_timeStamp = timestamp;\n      this.last_time = this.time[0];\n      window.requestAnimationFrame(this.update);\n    }\n  }]);\n\n  return Timer;\n}();\n\nexports.default = Timer;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./../../../node_modules/timers-browserify/main.js\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())).setImmediate))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb3JlL1RpbWVyLmpzP2Q0YmUiXSwibmFtZXMiOlsiU2lnbmFscyIsInJlcXVpcmUiLCJUaW1lciIsIm9wdGlvbnMiLCJ0b3RhbER1cmF0aW9uIiwidGltZSIsImlzX3BsYXlpbmciLCJsYXN0X3RpbWVTdGFtcCIsImxhc3RfdGltZSIsInVwZGF0ZWQiLCJTaWduYWwiLCJwcmVTdGF0dXNDaGFuZ2VkIiwic3RhdHVzQ2hhbmdlZCIsImR1cmF0aW9uQ2hhbmdlZCIsInNlZWtlZCIsInVwZGF0ZSIsImJpbmQiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzZWNvbmRzIiwiZGlzcGF0Y2giLCJzZXRJbW1lZGlhdGUiLCJ0aW1lc3RhbXAiLCJwZXJmb3JtYW5jZSIsIm5vdyIsImVsYXBzZWQiLCJzdG9wIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBSUEsVUFBVSxtQkFBQUMsQ0FBUSxDQUFSLENBQWQ7O0lBRXFCQyxLO0FBQ25CLG1CQUEwQjtBQUFBLFFBQWRDLE9BQWMsdUVBQUosRUFBSTs7QUFBQTs7QUFDeEI7QUFDQSxTQUFLQyxhQUFMLEdBQXFCRCxRQUFRQyxhQUFSLElBQXlCLE1BQU0sSUFBcEQ7QUFDQTtBQUNBLFNBQUtDLElBQUwsR0FBWSxDQUFDLENBQUQsQ0FBWjtBQUNBLFNBQUtDLFVBQUwsR0FBa0IsS0FBbEI7QUFDQSxTQUFLQyxjQUFMLEdBQXNCLENBQUMsQ0FBdkI7QUFDQSxTQUFLQyxTQUFMLEdBQWlCLENBQUMsQ0FBbEI7QUFDQSxTQUFLQyxPQUFMLEdBQWUsSUFBSVQsUUFBUVUsTUFBWixFQUFmO0FBQ0EsU0FBS0MsZ0JBQUwsR0FBd0IsSUFBSVgsUUFBUVUsTUFBWixFQUF4QjtBQUNBLFNBQUtFLGFBQUwsR0FBcUIsSUFBSVosUUFBUVUsTUFBWixFQUFyQjtBQUNBLFNBQUtHLGVBQUwsR0FBdUIsSUFBSWIsUUFBUVUsTUFBWixFQUF2QjtBQUNBLFNBQUtJLE1BQUwsR0FBYyxJQUFJZCxRQUFRVSxNQUFaLEVBQWQ7QUFDQSxTQUFLSyxNQUFMLEdBQWMsS0FBS0EsTUFBTCxDQUFZQyxJQUFaLENBQWlCLElBQWpCLENBQWQ7QUFDQUMsV0FBT0MscUJBQVAsQ0FBNkIsS0FBS0gsTUFBbEM7QUFDRDs7OztxQ0FFZ0I7QUFDZixhQUFPLEtBQUtWLElBQUwsQ0FBVSxDQUFWLENBQVA7QUFDRDs7O2tDQUVhO0FBQ1osYUFBTyxLQUFLRCxhQUFMLEdBQXFCLElBQTVCO0FBQ0Q7OztnQ0FFV2UsTyxFQUFTO0FBQ25CLFdBQUtmLGFBQUwsR0FBcUJlLFVBQVUsSUFBL0I7QUFDQSxXQUFLTixlQUFMLENBQXFCTyxRQUFyQixDQUE4QkQsT0FBOUI7QUFDRDs7OzJCQUVNO0FBQUE7O0FBQ0wsV0FBS1IsZ0JBQUwsQ0FBc0JTLFFBQXRCLENBQStCLElBQS9CO0FBQ0FDLG1CQUFhLFlBQU07QUFDakIsY0FBS2YsVUFBTCxHQUFrQixJQUFsQjtBQUNBLGNBQUtNLGFBQUwsQ0FBbUJRLFFBQW5CLENBQTRCLE1BQUtkLFVBQWpDO0FBQ0QsT0FIRDtBQUlEOzs7MkJBRU07QUFBQTs7QUFDTCxXQUFLSyxnQkFBTCxDQUFzQlMsUUFBdEIsQ0FBK0IsS0FBL0I7QUFDQUMsbUJBQWEsWUFBTTtBQUNqQixlQUFLZixVQUFMLEdBQWtCLEtBQWxCO0FBQ0EsZUFBS00sYUFBTCxDQUFtQlEsUUFBbkIsQ0FBNEIsT0FBS2QsVUFBakM7QUFDRCxPQUhEO0FBSUQ7Ozs2QkFFUTtBQUFBOztBQUNQLFdBQUtLLGdCQUFMLENBQXNCUyxRQUF0QixDQUErQixDQUFDLEtBQUtkLFVBQXJDO0FBQ0FlLG1CQUFhLFlBQU07QUFDakIsZUFBS2YsVUFBTCxHQUFrQixDQUFDLE9BQUtBLFVBQXhCO0FBQ0EsZUFBS00sYUFBTCxDQUFtQlEsUUFBbkIsQ0FBNEIsT0FBS2QsVUFBakM7QUFDRCxPQUhEO0FBSUQ7Ozt5QkFFSUQsSSxFQUFNO0FBQ1QsV0FBS0EsSUFBTCxDQUFVLENBQVYsSUFBZUEsS0FBSyxDQUFMLENBQWY7QUFDQSxXQUFLUyxNQUFMLENBQVlNLFFBQVosQ0FBcUIsS0FBS2YsSUFBTCxDQUFVLENBQVYsQ0FBckI7QUFDRDs7OzZCQUVRO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLFVBQUlpQixZQUFZQyxZQUFZQyxHQUFaLEVBQWhCO0FBQ0EsVUFBSSxLQUFLakIsY0FBTCxLQUF3QixDQUFDLENBQTdCLEVBQWdDO0FBQzlCLGFBQUtBLGNBQUwsR0FBc0JlLFNBQXRCO0FBQ0Q7QUFDRCxVQUFJRyxVQUFVSCxZQUFZLEtBQUtmLGNBQS9COztBQUVBLFVBQUksS0FBS0QsVUFBVCxFQUFxQjtBQUNuQixhQUFLRCxJQUFMLENBQVUsQ0FBVixLQUFnQm9CLE9BQWhCO0FBQ0Q7O0FBRUQsVUFBSSxLQUFLcEIsSUFBTCxDQUFVLENBQVYsS0FBZ0IsS0FBS0QsYUFBekIsRUFBd0M7QUFDdEM7QUFDQSxhQUFLQyxJQUFMLENBQVUsQ0FBVixJQUFlLEtBQUtELGFBQXBCO0FBQ0EsYUFBS3NCLElBQUw7QUFDRDs7QUFFRCxXQUFLakIsT0FBTCxDQUFhVyxRQUFiLENBQXNCLEtBQUtmLElBQUwsQ0FBVSxDQUFWLENBQXRCLEVBQW9DLEtBQUtDLFVBQUwsR0FBa0JtQixPQUFsQixHQUE0QixDQUFoRTs7QUFFQSxXQUFLbEIsY0FBTCxHQUFzQmUsU0FBdEI7QUFDQSxXQUFLZCxTQUFMLEdBQWlCLEtBQUtILElBQUwsQ0FBVSxDQUFWLENBQWpCO0FBQ0FZLGFBQU9DLHFCQUFQLENBQTZCLEtBQUtILE1BQWxDO0FBQ0Q7Ozs7OztrQkF0RmtCYixLIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgU2lnbmFscyA9IHJlcXVpcmUoJ2pzLXNpZ25hbHMnKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVyIHtcclxuICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30pIHtcclxuICAgIC8vIGluIG1pbGxpc2Vjb25kXHJcbiAgICB0aGlzLnRvdGFsRHVyYXRpb24gPSBvcHRpb25zLnRvdGFsRHVyYXRpb24gfHwgMjQwICogMTAwMDtcclxuICAgIC8vIFVzZSBhbiBhcnJheSBmb3IgdGhlIHRpbWUgZm9yIGVhc2llciBkMy5qcyBpbnRlZ3JhdGlvbiAodXNlZCBhcyBkYXRhIGZvciB0aW1lc2Vla2VyKS5cclxuICAgIHRoaXMudGltZSA9IFswXTtcclxuICAgIHRoaXMuaXNfcGxheWluZyA9IGZhbHNlO1xyXG4gICAgdGhpcy5sYXN0X3RpbWVTdGFtcCA9IC0xO1xyXG4gICAgdGhpcy5sYXN0X3RpbWUgPSAtMTtcclxuICAgIHRoaXMudXBkYXRlZCA9IG5ldyBTaWduYWxzLlNpZ25hbCgpO1xyXG4gICAgdGhpcy5wcmVTdGF0dXNDaGFuZ2VkID0gbmV3IFNpZ25hbHMuU2lnbmFsKCk7XHJcbiAgICB0aGlzLnN0YXR1c0NoYW5nZWQgPSBuZXcgU2lnbmFscy5TaWduYWwoKTtcclxuICAgIHRoaXMuZHVyYXRpb25DaGFuZ2VkID0gbmV3IFNpZ25hbHMuU2lnbmFsKCk7XHJcbiAgICB0aGlzLnNlZWtlZCA9IG5ldyBTaWduYWxzLlNpZ25hbCgpO1xyXG4gICAgdGhpcy51cGRhdGUgPSB0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpO1xyXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZSk7XHJcbiAgfVxyXG5cclxuICBnZXRDdXJyZW50VGltZSgpIHtcclxuICAgIHJldHVybiB0aGlzLnRpbWVbMF07XHJcbiAgfVxyXG5cclxuICBnZXREdXJhdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLnRvdGFsRHVyYXRpb24gLyAxMDAwO1xyXG4gIH1cclxuXHJcbiAgc2V0RHVyYXRpb24oc2Vjb25kcykge1xyXG4gICAgdGhpcy50b3RhbER1cmF0aW9uID0gc2Vjb25kcyAqIDEwMDA7XHJcbiAgICB0aGlzLmR1cmF0aW9uQ2hhbmdlZC5kaXNwYXRjaChzZWNvbmRzKTtcclxuICB9XHJcblxyXG4gIHBsYXkoKSB7XHJcbiAgICB0aGlzLnByZVN0YXR1c0NoYW5nZWQuZGlzcGF0Y2godHJ1ZSk7XHJcbiAgICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xyXG4gICAgICB0aGlzLmlzX3BsYXlpbmcgPSB0cnVlO1xyXG4gICAgICB0aGlzLnN0YXR1c0NoYW5nZWQuZGlzcGF0Y2godGhpcy5pc19wbGF5aW5nKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgc3RvcCgpIHtcclxuICAgIHRoaXMucHJlU3RhdHVzQ2hhbmdlZC5kaXNwYXRjaChmYWxzZSk7XHJcbiAgICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xyXG4gICAgICB0aGlzLmlzX3BsYXlpbmcgPSBmYWxzZTtcclxuICAgICAgdGhpcy5zdGF0dXNDaGFuZ2VkLmRpc3BhdGNoKHRoaXMuaXNfcGxheWluZyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZSgpIHtcclxuICAgIHRoaXMucHJlU3RhdHVzQ2hhbmdlZC5kaXNwYXRjaCghdGhpcy5pc19wbGF5aW5nKTtcclxuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XHJcbiAgICAgIHRoaXMuaXNfcGxheWluZyA9ICF0aGlzLmlzX3BsYXlpbmc7XHJcbiAgICAgIHRoaXMuc3RhdHVzQ2hhbmdlZC5kaXNwYXRjaCh0aGlzLmlzX3BsYXlpbmcpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzZWVrKHRpbWUpIHtcclxuICAgIHRoaXMudGltZVswXSA9IHRpbWVbMF07XHJcbiAgICB0aGlzLnNlZWtlZC5kaXNwYXRjaCh0aGlzLnRpbWVbMF0pO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlKCkge1xyXG4gICAgLy8gSW5pdCB0aW1lc3RhbXBcclxuXHJcbiAgICAvLyB0aGUgYXJndW1lbnQgdGltZXN0YW1wIGlzIHRvbyBvbGQsIGlmIHdlIGhhdmUgYSBsb25nIHRpbWUgdGFzayBvbiBjbGljayBvblxyXG4gICAgLy8gcGxheSBidXR0b24ncyBjbGljayBoYW5kbGVyLiBzbyByZS1mZXRjaCB0aGUgY3VycmVudCB0aW1lc3RhbXAgaGVyZSBhZ2Fpbi5cclxuICAgIGxldCB0aW1lc3RhbXAgPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuICAgIGlmICh0aGlzLmxhc3RfdGltZVN0YW1wID09PSAtMSkge1xyXG4gICAgICB0aGlzLmxhc3RfdGltZVN0YW1wID0gdGltZXN0YW1wO1xyXG4gICAgfVxyXG4gICAgdmFyIGVsYXBzZWQgPSB0aW1lc3RhbXAgLSB0aGlzLmxhc3RfdGltZVN0YW1wO1xyXG5cclxuICAgIGlmICh0aGlzLmlzX3BsYXlpbmcpIHtcclxuICAgICAgdGhpcy50aW1lWzBdICs9IGVsYXBzZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMudGltZVswXSA+PSB0aGlzLnRvdGFsRHVyYXRpb24pIHtcclxuICAgICAgLy8gU3RvcCB0aW1lciB3aGVuIHJlYWNoaW5nIHRoZSBlbmQuXHJcbiAgICAgIHRoaXMudGltZVswXSA9IHRoaXMudG90YWxEdXJhdGlvbjtcclxuICAgICAgdGhpcy5zdG9wKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy51cGRhdGVkLmRpc3BhdGNoKHRoaXMudGltZVswXSwgdGhpcy5pc19wbGF5aW5nID8gZWxhcHNlZCA6IDApO1xyXG5cclxuICAgIHRoaXMubGFzdF90aW1lU3RhbXAgPSB0aW1lc3RhbXA7XHJcbiAgICB0aGlzLmxhc3RfdGltZSA9IHRoaXMudGltZVswXTtcclxuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy51cGRhdGUpO1xyXG4gIH1cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb3JlL1RpbWVyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_3__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwic2lnbmFsc1wiLFwiY29tbW9uanNcIjpcInNpZ25hbHNcIixcImNvbW1vbmpzMlwiOlwic2lnbmFsc1wiLFwiYW1kXCI6XCJzaWduYWxzXCJ9PzkwMzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8zX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwge1wicm9vdFwiOlwic2lnbmFsc1wiLFwiY29tbW9uanNcIjpcInNpZ25hbHNcIixcImNvbW1vbmpzMlwiOlwic2lnbmFsc1wiLFwiYW1kXCI6XCJzaWduYWxzXCJ9XG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(1);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _bezierEasing = __webpack_require__(5);\n\nvar _bezierEasing2 = _interopRequireDefault(_bezierEasing);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Signals = __webpack_require__(3);\nvar TweenMax = __webpack_require__(6);\nvar TimelineMax = __webpack_require__(7);\nvar Quad = __webpack_require__(8);\n\nvar Orchestrator = function () {\n  function Orchestrator(timer, data) {\n    _classCallCheck(this, Orchestrator);\n\n    this.update = this.update.bind(this);\n    this.timer = timer;\n    this.data = data;\n    this.mainTimeline = new TimelineMax({ paused: true });\n    this.onUpdate = new Signals.Signal();\n    this.timer.updated.add(this.update);\n    this.update(0);\n    this.onEvent = new Signals.Signal();\n  }\n\n  _createClass(Orchestrator, [{\n    key: 'addUpdateListener',\n    value: function addUpdateListener(listener) {\n      this.onUpdate.add(listener);\n    }\n  }, {\n    key: 'removeUpdateListener',\n    value: function removeUpdateListener(listener) {\n      this.onUpdate.remove(listener);\n    }\n  }, {\n    key: 'setData',\n    value: function setData(data) {\n      this.data = data;\n    }\n  }, {\n    key: 'getTotalDuration',\n    value: function getTotalDuration() {\n      return this.mainTimeline.totalDuration();\n    }\n  }, {\n    key: 'getEasing',\n    value: function getEasing() {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (key && key.ease) {\n        return _Utils2.default.getEasingPoints(key.ease);\n      }\n      return _Utils2.default.getEasingPoints('Quad.easeOut');\n    }\n  }, {\n    key: 'initSpecialProperties',\n    value: function initSpecialProperties(item) {\n      // Add a dom element for color tweening and other css properties.\n      item._domHelper = document.createElement('div');\n      for (var property_key = 0; property_key < item.properties.length; property_key++) {\n        var property = item.properties[property_key];\n        // Setup special properties\n        if (property.type && property.type === 'color') {\n          // If the property is a color mark it as css\n          property.css = true;\n        }\n\n        if (property.css) {\n          // If property is a css or a color value apply it to the domHelper element.\n          item._domHelper.style[property.name] = property.val;\n        }\n      }\n    }\n  }, {\n    key: 'initItemValues',\n    value: function initItemValues(item) {\n      item.values = {};\n      // item._isDirty = true\n      for (var property_key = 0; property_key < item.properties.length; property_key++) {\n        var property = item.properties[property_key];\n        if (property.keys.length) {\n          // Take the value of the first key as initial value.\n          // this.todo: update this when the value of the first key change. (when rebuilding the timeline, simply delete item.values before item._timeline)\n          property.val = property.keys[0].val;\n        }\n        item.values[property.name] = property.val;\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update(timestamp, elapsed) {\n      var seconds = timestamp / 1000;\n      var seconds_elapsed = elapsed / 1000;\n\n      var has_dirty_items = false;\n\n      for (var i = 0; i < this.data.length; i++) {\n        var item = this.data[i];\n        if (!item._domHelper) {\n          this.initSpecialProperties(item);\n        }\n\n        // create the values object to contain all properties\n        if (!item.values) {\n          this.initItemValues(item);\n        }\n\n        // Create the timeline if needed\n        if (!item._timeline) {\n          item._timeline = new TimelineMax();\n          this.mainTimeline.add(item._timeline, 0);\n          item._isDirty = true;\n        }\n\n        if (item._isDirty) {\n          has_dirty_items = true;\n        }\n\n        if (item._timeline && item._isDirty && item.properties) {\n          item._isDirty = false;\n          // item._timeline.clear();\n\n          for (var property_key = 0; property_key < item.properties.length; property_key++) {\n            var property = item.properties[property_key];\n            if (property._timeline) {\n              property._timeline.clear();\n            } else {\n              property._timeline = new TimelineMax();\n              item._timeline.add(property._timeline, 0);\n            }\n\n            // Add a reference to the parent item for easier reference.\n            if (!property._line) {\n              property._line = item;\n            }\n\n            var propertyTimeline = property._timeline;\n            var propName = property.name;\n\n            // If there is no key stop there and set value to default.\n            if (!property.keys.length) {\n              item.values[property.name] = property.val;\n              continue;\n            }\n\n            // Set the data values target object.\n            var data_target = item.values;\n            // Add a inital key, even if there is no animation to set the value from time 0.\n            var first_key = property.keys[0];\n\n            var tween_time = 0;\n            if (first_key) {\n              tween_time = Math.min(-1, first_key.time - 0.1);\n            }\n\n            var tween_duration = 0;\n            var val = {};\n            var easing = this.getEasing();\n            // Use spread to convert array to multiple arguments.\n            val.ease = _bezierEasing2.default.apply(undefined, _toConsumableArray(easing));\n\n            if (property.css) {\n              data_target = item._domHelper;\n              val.css = {};\n              val.css[propName] = first_key ? first_key.val : property.val;\n            } else {\n              val[propName] = first_key ? first_key.val : property.val;\n            }\n\n            var tween = TweenMax.to(data_target, tween_duration, val);\n            propertyTimeline.add(tween, tween_time);\n\n            for (var key_index = 0; key_index < property.keys.length; key_index++) {\n              var key = property.keys[key_index];\n              // Add a reference to the parent property, allow easier access\n              // without relying on dom order.\n              if (!key._property) {\n                key._property = property;\n              }\n\n              if (key_index < property.keys.length - 1) {\n                var next_key = property.keys[key_index + 1];\n                tween_duration = next_key.time - key.time;\n\n                val = {};\n                easing = this.getEasing(next_key);\n\n                // Use spread to convert array to multiple arguments.\n                val.ease = _bezierEasing2.default.apply(undefined, _toConsumableArray(easing));\n                if (property.css) {\n                  val.css = {};\n                  val.css[propName] = next_key.val;\n                } else {\n                  val[propName] = next_key.val;\n                }\n\n                tween = TweenMax.to(data_target, tween_duration, val);\n                propertyTimeline.add(tween, key.time);\n              }\n            }\n\n            // Directly seek the property timeline to update the value.\n            propertyTimeline.seek(seconds);\n          }\n          // Force main timeline to refresh but never try to go to < 0\n          // to prevent glitches when current time is 0.\n          if (seconds > 0) {\n            seconds = seconds - 0.0000001;\n          } else {\n            seconds = seconds + 0.0000001;\n          }\n        }\n      }\n\n      // Finally update the main timeline.\n      this.mainTimeline.seek(seconds);\n\n      // check if event type property to be fired\n      for (var _i = 0; _i < this.data.length; _i++) {\n        var _item = this.data[_i];\n        for (var _property_key = 0; _property_key < _item.properties.length; _property_key++) {\n          var _property = _item.properties[_property_key];\n          if (_property.type !== 'event') {\n            continue;\n          }\n          for (var _key_index = 0; _key_index < _property.keys.length; _key_index++) {\n            var _key = _property.keys[_key_index];\n            if (seconds_elapsed > 0 && _key.time <= seconds && _key.time > seconds - seconds_elapsed) {\n              this.onEvent.dispatch(_property.name, _key.val);\n            }\n          }\n        }\n      }\n\n      // update the css properties.\n      for (var _i2 = 0; _i2 < this.data.length; _i2++) {\n        var _item2 = this.data[_i2];\n        for (var _property_key2 = 0; _property_key2 < _item2.properties.length; _property_key2++) {\n          var _property2 = _item2.properties[_property_key2];\n          if (_property2.css && _property2.keys.length) {\n            // Only css values.\n            _item2.values[_property2.name] = _item2._domHelper.style[_property2.name];\n          }\n        }\n      }\n\n      if (has_dirty_items) {\n        this.onUpdate.dispatch();\n      }\n    }\n  }]);\n\n  return Orchestrator;\n}();\n\nexports.default = Orchestrator;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 5 */
/***/ function(module, exports) {

	eval("/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  if (mX1 !== mY1 || mX2 !== mY2) {\n    for (var i = 0; i < kSplineTableSize; ++i) {\n      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    if (mX1 === mY1 && mX2 === mY2) {\n      return x; // linear\n    }\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vQzovRGV2ZWxvcG1lbnQvQUNFLVR3ZWVuVGltZS9+L2Jlemllci1lYXNpbmcvc3JjL2luZGV4LmpzPzc1MmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUEsdUJBQXVCLG9DQUFvQztBQUMzRCx1QkFBdUIsOEJBQThCO0FBQ3JELHVCQUF1QixrQkFBa0I7O0FBRXpDO0FBQ0Esb0NBQW9DLDhEQUE4RDs7QUFFbEc7QUFDQSxrQ0FBa0Msc0VBQXNFOztBQUV4RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0JBQXNCO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxVQUFVLG1FQUFtRTtBQUM3RTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmUvYmV6aWVyLWVhc2luZ1xuICogQmV6aWVyRWFzaW5nIC0gdXNlIGJlemllciBjdXJ2ZSBmb3IgdHJhbnNpdGlvbiBlYXNpbmcgZnVuY3Rpb25cbiAqIGJ5IEdhw6t0YW4gUmVuYXVkZWF1IDIwMTQgLSAyMDE1IOKAkyBNSVQgTGljZW5zZVxuICovXG5cbi8vIFRoZXNlIHZhbHVlcyBhcmUgZXN0YWJsaXNoZWQgYnkgZW1waXJpY2lzbSB3aXRoIHRlc3RzICh0cmFkZW9mZjogcGVyZm9ybWFuY2UgVlMgcHJlY2lzaW9uKVxudmFyIE5FV1RPTl9JVEVSQVRJT05TID0gNDtcbnZhciBORVdUT05fTUlOX1NMT1BFID0gMC4wMDE7XG52YXIgU1VCRElWSVNJT05fUFJFQ0lTSU9OID0gMC4wMDAwMDAxO1xudmFyIFNVQkRJVklTSU9OX01BWF9JVEVSQVRJT05TID0gMTA7XG5cbnZhciBrU3BsaW5lVGFibGVTaXplID0gMTE7XG52YXIga1NhbXBsZVN0ZXBTaXplID0gMS4wIC8gKGtTcGxpbmVUYWJsZVNpemUgLSAxLjApO1xuXG52YXIgZmxvYXQzMkFycmF5U3VwcG9ydGVkID0gdHlwZW9mIEZsb2F0MzJBcnJheSA9PT0gJ2Z1bmN0aW9uJztcblxuZnVuY3Rpb24gQSAoYUExLCBhQTIpIHsgcmV0dXJuIDEuMCAtIDMuMCAqIGFBMiArIDMuMCAqIGFBMTsgfVxuZnVuY3Rpb24gQiAoYUExLCBhQTIpIHsgcmV0dXJuIDMuMCAqIGFBMiAtIDYuMCAqIGFBMTsgfVxuZnVuY3Rpb24gQyAoYUExKSAgICAgIHsgcmV0dXJuIDMuMCAqIGFBMTsgfVxuXG4vLyBSZXR1cm5zIHgodCkgZ2l2ZW4gdCwgeDEsIGFuZCB4Miwgb3IgeSh0KSBnaXZlbiB0LCB5MSwgYW5kIHkyLlxuZnVuY3Rpb24gY2FsY0JlemllciAoYVQsIGFBMSwgYUEyKSB7IHJldHVybiAoKEEoYUExLCBhQTIpICogYVQgKyBCKGFBMSwgYUEyKSkgKiBhVCArIEMoYUExKSkgKiBhVDsgfVxuXG4vLyBSZXR1cm5zIGR4L2R0IGdpdmVuIHQsIHgxLCBhbmQgeDIsIG9yIGR5L2R0IGdpdmVuIHQsIHkxLCBhbmQgeTIuXG5mdW5jdGlvbiBnZXRTbG9wZSAoYVQsIGFBMSwgYUEyKSB7IHJldHVybiAzLjAgKiBBKGFBMSwgYUEyKSAqIGFUICogYVQgKyAyLjAgKiBCKGFBMSwgYUEyKSAqIGFUICsgQyhhQTEpOyB9XG5cbmZ1bmN0aW9uIGJpbmFyeVN1YmRpdmlkZSAoYVgsIGFBLCBhQiwgbVgxLCBtWDIpIHtcbiAgdmFyIGN1cnJlbnRYLCBjdXJyZW50VCwgaSA9IDA7XG4gIGRvIHtcbiAgICBjdXJyZW50VCA9IGFBICsgKGFCIC0gYUEpIC8gMi4wO1xuICAgIGN1cnJlbnRYID0gY2FsY0JlemllcihjdXJyZW50VCwgbVgxLCBtWDIpIC0gYVg7XG4gICAgaWYgKGN1cnJlbnRYID4gMC4wKSB7XG4gICAgICBhQiA9IGN1cnJlbnRUO1xuICAgIH0gZWxzZSB7XG4gICAgICBhQSA9IGN1cnJlbnRUO1xuICAgIH1cbiAgfSB3aGlsZSAoTWF0aC5hYnMoY3VycmVudFgpID4gU1VCRElWSVNJT05fUFJFQ0lTSU9OICYmICsraSA8IFNVQkRJVklTSU9OX01BWF9JVEVSQVRJT05TKTtcbiAgcmV0dXJuIGN1cnJlbnRUO1xufVxuXG5mdW5jdGlvbiBuZXd0b25SYXBoc29uSXRlcmF0ZSAoYVgsIGFHdWVzc1QsIG1YMSwgbVgyKSB7XG4gZm9yICh2YXIgaSA9IDA7IGkgPCBORVdUT05fSVRFUkFUSU9OUzsgKytpKSB7XG4gICB2YXIgY3VycmVudFNsb3BlID0gZ2V0U2xvcGUoYUd1ZXNzVCwgbVgxLCBtWDIpO1xuICAgaWYgKGN1cnJlbnRTbG9wZSA9PT0gMC4wKSB7XG4gICAgIHJldHVybiBhR3Vlc3NUO1xuICAgfVxuICAgdmFyIGN1cnJlbnRYID0gY2FsY0JlemllcihhR3Vlc3NULCBtWDEsIG1YMikgLSBhWDtcbiAgIGFHdWVzc1QgLT0gY3VycmVudFggLyBjdXJyZW50U2xvcGU7XG4gfVxuIHJldHVybiBhR3Vlc3NUO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJlemllciAobVgxLCBtWTEsIG1YMiwgbVkyKSB7XG4gIGlmICghKDAgPD0gbVgxICYmIG1YMSA8PSAxICYmIDAgPD0gbVgyICYmIG1YMiA8PSAxKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignYmV6aWVyIHggdmFsdWVzIG11c3QgYmUgaW4gWzAsIDFdIHJhbmdlJyk7XG4gIH1cblxuICAvLyBQcmVjb21wdXRlIHNhbXBsZXMgdGFibGVcbiAgdmFyIHNhbXBsZVZhbHVlcyA9IGZsb2F0MzJBcnJheVN1cHBvcnRlZCA/IG5ldyBGbG9hdDMyQXJyYXkoa1NwbGluZVRhYmxlU2l6ZSkgOiBuZXcgQXJyYXkoa1NwbGluZVRhYmxlU2l6ZSk7XG4gIGlmIChtWDEgIT09IG1ZMSB8fCBtWDIgIT09IG1ZMikge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga1NwbGluZVRhYmxlU2l6ZTsgKytpKSB7XG4gICAgICBzYW1wbGVWYWx1ZXNbaV0gPSBjYWxjQmV6aWVyKGkgKiBrU2FtcGxlU3RlcFNpemUsIG1YMSwgbVgyKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRURm9yWCAoYVgpIHtcbiAgICB2YXIgaW50ZXJ2YWxTdGFydCA9IDAuMDtcbiAgICB2YXIgY3VycmVudFNhbXBsZSA9IDE7XG4gICAgdmFyIGxhc3RTYW1wbGUgPSBrU3BsaW5lVGFibGVTaXplIC0gMTtcblxuICAgIGZvciAoOyBjdXJyZW50U2FtcGxlICE9PSBsYXN0U2FtcGxlICYmIHNhbXBsZVZhbHVlc1tjdXJyZW50U2FtcGxlXSA8PSBhWDsgKytjdXJyZW50U2FtcGxlKSB7XG4gICAgICBpbnRlcnZhbFN0YXJ0ICs9IGtTYW1wbGVTdGVwU2l6ZTtcbiAgICB9XG4gICAgLS1jdXJyZW50U2FtcGxlO1xuXG4gICAgLy8gSW50ZXJwb2xhdGUgdG8gcHJvdmlkZSBhbiBpbml0aWFsIGd1ZXNzIGZvciB0XG4gICAgdmFyIGRpc3QgPSAoYVggLSBzYW1wbGVWYWx1ZXNbY3VycmVudFNhbXBsZV0pIC8gKHNhbXBsZVZhbHVlc1tjdXJyZW50U2FtcGxlICsgMV0gLSBzYW1wbGVWYWx1ZXNbY3VycmVudFNhbXBsZV0pO1xuICAgIHZhciBndWVzc0ZvclQgPSBpbnRlcnZhbFN0YXJ0ICsgZGlzdCAqIGtTYW1wbGVTdGVwU2l6ZTtcblxuICAgIHZhciBpbml0aWFsU2xvcGUgPSBnZXRTbG9wZShndWVzc0ZvclQsIG1YMSwgbVgyKTtcbiAgICBpZiAoaW5pdGlhbFNsb3BlID49IE5FV1RPTl9NSU5fU0xPUEUpIHtcbiAgICAgIHJldHVybiBuZXd0b25SYXBoc29uSXRlcmF0ZShhWCwgZ3Vlc3NGb3JULCBtWDEsIG1YMik7XG4gICAgfSBlbHNlIGlmIChpbml0aWFsU2xvcGUgPT09IDAuMCkge1xuICAgICAgcmV0dXJuIGd1ZXNzRm9yVDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGJpbmFyeVN1YmRpdmlkZShhWCwgaW50ZXJ2YWxTdGFydCwgaW50ZXJ2YWxTdGFydCArIGtTYW1wbGVTdGVwU2l6ZSwgbVgxLCBtWDIpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBCZXppZXJFYXNpbmcgKHgpIHtcbiAgICBpZiAobVgxID09PSBtWTEgJiYgbVgyID09PSBtWTIpIHtcbiAgICAgIHJldHVybiB4OyAvLyBsaW5lYXJcbiAgICB9XG4gICAgLy8gQmVjYXVzZSBKYXZhU2NyaXB0IG51bWJlciBhcmUgaW1wcmVjaXNlLCB3ZSBzaG91bGQgZ3VhcmFudGVlIHRoZSBleHRyZW1lcyBhcmUgcmlnaHQuXG4gICAgaWYgKHggPT09IDApIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBpZiAoeCA9PT0gMSkge1xuICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIHJldHVybiBjYWxjQmV6aWVyKGdldFRGb3JYKHgpLCBtWTEsIG1ZMik7XG4gIH07XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gQzovRGV2ZWxvcG1lbnQvQUNFLVR3ZWVuVGltZS9+L2Jlemllci1lYXNpbmcvc3JjL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 6 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_6__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiVHdlZW5NYXhcIixcImNvbW1vbmpzXCI6W1wiZ3NhcFwiLFwiVHdlZW5NYXhcIl0sXCJjb21tb25qczJcIjpbXCJnc2FwXCIsXCJUd2Vlbk1heFwiXSxcImFtZFwiOlwiVHdlZW5NYXhcIn0/Y2JlYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzZfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCB7XCJyb290XCI6XCJUd2Vlbk1heFwiLFwiY29tbW9uanNcIjpbXCJnc2FwXCIsXCJUd2Vlbk1heFwiXSxcImNvbW1vbmpzMlwiOltcImdzYXBcIixcIlR3ZWVuTWF4XCJdLFwiYW1kXCI6XCJUd2Vlbk1heFwifVxuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_7__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiVGltZWxpbmVNYXhcIixcImNvbW1vbmpzXCI6W1wiZ3NhcFwiLFwiVGltZWxpbmVNYXhcIl0sXCJjb21tb25qczJcIjpbXCJnc2FwXCIsXCJUaW1lbGluZU1heFwiXSxcImFtZFwiOlwiVGltZWxpbmVNYXhcIn0/MjgwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzdfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCB7XCJyb290XCI6XCJUaW1lbGluZU1heFwiLFwiY29tbW9uanNcIjpbXCJnc2FwXCIsXCJUaW1lbGluZU1heFwiXSxcImNvbW1vbmpzMlwiOltcImdzYXBcIixcIlRpbWVsaW5lTWF4XCJdLFwiYW1kXCI6XCJUaW1lbGluZU1heFwifVxuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 8 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_8__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUXVhZFwiLFwiY29tbW9uanNcIjpbXCJnc2FwXCIsXCJRdWFkXCJdLFwiY29tbW9uanMyXCI6W1wiZ3NhcFwiLFwiUXVhZFwiXSxcImFtZFwiOlwiUXVhZFwifT9iZTk5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfOF9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIHtcInJvb3RcIjpcIlF1YWRcIixcImNvbW1vbmpzXCI6W1wiZ3NhcFwiLFwiUXVhZFwiXSxcImNvbW1vbmpzMlwiOltcImdzYXBcIixcIlF1YWRcIl0sXCJhbWRcIjpcIlF1YWRcIn1cbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 9 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_9__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiX1wiLFwiY29tbW9uanNcIjpcImxvZGFzaFwiLFwiY29tbW9uanMyXCI6XCJsb2Rhc2hcIixcImFtZFwiOlwibG9kYXNoXCJ9PzU1ZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV85X187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwge1wicm9vdFwiOlwiX1wiLFwiY29tbW9uanNcIjpcImxvZGFzaFwiLFwiY29tbW9uanMyXCI6XCJsb2Rhc2hcIixcImFtZFwiOlwibG9kYXNoXCJ9XG4vLyBtb2R1bGUgaWQgPSA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ }
/******/ ])
});
;